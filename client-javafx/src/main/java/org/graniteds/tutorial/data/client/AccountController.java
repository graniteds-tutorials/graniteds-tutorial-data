/**
 * Generated by Gfx v3.0.0 (Granite Data Services).
 *
 * NOTE: this file is only generated if it does not exist. You may safely put
 * your custom code here.
 */

package org.graniteds.tutorial.data.client;

import javax.inject.Named;
import javax.validation.Validation;
import javax.validation.Validator;

import org.granite.client.javafx.tide.ManagedEntity;
import org.granite.client.tide.server.TideFaultEvent;
import org.granite.client.tide.server.TideResponder;
import org.granite.client.tide.server.TideResultEvent;


@Named
public class AccountController extends ManagedEntity<Account> {

	private final Validator validator = Validation.buildDefaultValidatorFactory().getValidator();
	
	private AccountService accountService;
	
	public AccountController(AccountService accountService) {
		this.accountService = accountService;
	}
	
	// tag::entity-save[]
	public void save() {
        if (!validator.validate(getInstance()).isEmpty()) // <1>
            return;

        accountService.save(getInstance(), new TideResponder<Void>() { // <2>
			@Override
			public void result(TideResultEvent<Void> tre) { // <3>
				setInstance(null);
			}
			
			@Override
			public void fault(TideFaultEvent tfe) { // <4>
				System.out.println("Could not save account: " + tfe.getFault()); 
			}        	
        });
	}
	// end::entity-save[]
	
	public void remove() {
        accountService.remove(getInstance(), new TideResponder<Void>() {
			@Override
			public void result(TideResultEvent<Void> tre) {
				setInstance(null);
			}
			
			@Override
			public void fault(TideFaultEvent tfe) {
				System.out.println("Could not delete account: " + tfe.getFault());
			}        	
        });
	}
}